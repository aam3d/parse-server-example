Description: > 

  This deploys the service on the infrastrucure based off the required parameters;
    --- client name
    --- environment

  If you add new parameters in the secrets manager document, they must be added to the environment within the 
  task definition below, so that they show up as environment variables.

Parameters:

  Client:
    Description: The name of the client, generally in lowercase
    Type: String

  Environment:
    Description: The name of the environment to deploy to
    AllowedValues: 
    - stg
    - prd
    Type: String

  DockerImage:
    Description: The docker image to deploy to the cluster
    Type: String

  DomainName:
    Description: The domain name of the service
    Type: String

  Secrets:
    Description: The ARN of the secrets file to use
    Type: String

  Priority:
    Description: The load balancer evaluation priority
    Type: String

Resources: 

  ListenerRule:
    Type: AWS::ElasticLoadBalancingV2::ListenerRule
    DependsOn: TargetGroup
    Properties:
      Actions:
      - Type: forward
        TargetGroupArn: !Ref TargetGroup
      Conditions:
      - Field: host-header
        HostHeaderConfig:
          Values:
          - !Ref DomainName
      ListenerArn: 
        Fn::ImportValue: !Join ["", [ ParseServerAlbListener, !Ref Environment ] ]
      Priority: !Ref Priority

  TargetGroup:
    Type: AWS::ElasticLoadBalancingV2::TargetGroup
    Properties:
      VpcId: vpc-e92f668e
      Port: 8080
      Protocol: HTTP
      Matcher:
        HttpCode: 200-499
      HealthCheckIntervalSeconds: 60
      HealthCheckPath: /
      HealthCheckProtocol: HTTP
      HealthCheckTimeoutSeconds: 30
      HealthyThresholdCount: 2
      UnhealthyThresholdCount: 2

  Service:
    Type: AWS::ECS::Service
    DependsOn: ListenerRule
    Properties: 
      Cluster: 
        Fn::ImportValue: !Join ["", [ ECSCluster, !Ref Environment ] ]
      Role: !Sub arn:aws:iam::${AWS::AccountId}:role/aws-service-role/ecs.amazonaws.com/AWSServiceRoleForECS
      DesiredCount: 2
      TaskDefinition: !Ref TaskDefinition
      DeploymentConfiguration:
        MaximumPercent: 200
        MinimumHealthyPercent: 100
      PlacementStrategies:
      - Type: spread
        Field: instanceId
      LoadBalancers: 
      - ContainerName: !Sub aam-ecs-service-parse-${Client}-${Environment}
        ContainerPort: 1343
        TargetGroupArn: !Ref TargetGroup

  TaskDefinition:
    Type: AWS::ECS::TaskDefinition
    Properties:
      Family: !Sub aam-ecs-service-parse-${Client}-${Environment}
      ContainerDefinitions:
      - Name: !Sub aam-ecs-service-parse-${Client}-${Environment}
        Image: !Ref DockerImage
        MemoryReservation: 192
        PortMappings:
        - ContainerPort: 1343
          Protocol: tcp
        Environment:
        - Name: sesAPIKey
          Value: !Join ['', ['{{resolve:secretsmanager:', !Ref Secrets, ':SecretString:sesAPIKey}}' ]]
        - Name: sesAPISecret
          Value: !Join ['', ['{{resolve:secretsmanager:', !Ref Secrets, ':SecretString:sesAPISecret}}' ]]
        - Name: mongoDatabaseURI
          Value: !Join ['', ['{{resolve:secretsmanager:', !Ref Secrets, ':SecretString:mongoDatabaseURI}}' ]]
        - Name: appId
          Value: !Join ['', ['{{resolve:secretsmanager:', !Ref Secrets, ':SecretString:appId}}' ]]
        - Name: masterKey
          Value: !Join ['', ['{{resolve:secretsmanager:', !Ref Secrets, ':SecretString:masterKey}}' ]]
        - Name: bucketName
          Value: !Join ['', ['{{resolve:secretsmanager:', !Ref Secrets, ':SecretString:bucketName}}' ]]
        - Name: bucketRegion
          Value: !Ref AWS::Region
        - Name: clientId
          Value: !Join ['', ['{{resolve:secretsmanager:', !Ref Secrets, ':SecretString:clientId}}' ]]
        - Name: appName
          Value: !Join ['', ['{{resolve:secretsmanager:', !Ref Secrets, ':SecretString:appName}}' ]]
        - Name: clientDomain
          Value: !Join ['', ['{{resolve:secretsmanager:', !Ref Secrets, ':SecretString:clientDomain}}' ]]
        - Name: portalUrl
          Value: !Join ['', ['{{resolve:secretsmanager:', !Ref Secrets, ':SecretString:portalUrl}}' ]]
        - Name: portalUser
          Value: !Join ['', ['{{resolve:secretsmanager:', !Ref Secrets, ':SecretString:portalUser}}' ]]
        - Name: portalPass
          Value: !Join ['', ['{{resolve:secretsmanager:', !Ref Secrets, ':SecretString:portalPass}}' ]]
        - Name: appColour
          Value: !Join ['', ['{{resolve:secretsmanager:', !Ref Secrets, ':SecretString:appColour}}' ]]
        - Name: domainName
          Value: !Ref DomainName
        LogConfiguration:
          LogDriver: awslogs
          Options:
            awslogs-group: !Ref AWS::StackName
            awslogs-region: !Ref AWS::Region

  CloudWatchLogsGroup:
    Type: AWS::Logs::LogGroup
    Properties: 
      LogGroupName: !Ref AWS::StackName
      RetentionInDays: 7 

  RecordSet:
    Type: AWS::Route53::RecordSet
    Properties:
      HostedZoneId: Z12GWCNKT39Y1B
      Name: !Ref DomainName
      ResourceRecords:
      - Fn::ImportValue: 
          !Join ["", [ ParseServerAlbEndpoint, !Ref Environment ] ]
      TTL: 300
      Type: CNAME

Outputs:

  DomainName:
    Value: !Ref DomainName

  DockerImage:
    Value: !Ref DockerImage